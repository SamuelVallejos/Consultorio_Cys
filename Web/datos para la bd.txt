mysql -u root -p
CREATE USER 'javier'@'localhost' IDENTIFIED BY 'Zeus1998+';
GRANT ALL PRIVILEGES ON consultoriocys.* TO 'javier'@'localhost';
FLUSH PRIVILEGES;

mysql -u javier -p
Zeus1998+
CREATE DATABASE consultoriocys;
USE consultoriocys;
SHOW DATABASES;
EXIT;



Ejeturar en cmd "python manage.py shell" y pega de la linea 19 a la 217

------------------------------------------------------------------------------

from consultorioCys.models import Doctor, Paciente, Informe, Clinica, SedeClinica, Usuario, DoctorClinica, DisponibilidadDoctor, Plan, Suscripcion
from django.utils import timezone
from django.utils.timezone import now, timedelta
import datetime

# Crear usuarios (doctores)
usuario_doctor1 = Usuario(
    rut='20637502-7',
    email='gui.rojas@duocuc.cl',
    nombre='Guillermo',
    apellido='Rojas'
)
usuario_doctor1.set_password('contrasena123')
usuario_doctor1.save()

usuario_doctor2 = Usuario(
    rut='21059713-1',
    email='ja.rojast@duocuc.cl',
    nombre='Javier',
    apellido='Rojas'
)
usuario_doctor2.set_password('contrasena123')
usuario_doctor2.save()

# Crear doctores
doctor1 = Doctor(
    usuario=usuario_doctor1,  
    rut_doctor='20637502-7',
    nombres_doctor='Guillermo',
    primer_apellido_doctor='Rojas',
    segundo_apellido_doctor='Muñoz',
    correo_doctor='gui.rojas@duocuc.cl',
    telefono_doctor='954123655',
    fecha_nacimiento_doctor='2000-01-01',
    especialidad_doctor='Cardiología'
)
doctor1.save()

doctor2 = Doctor(
    usuario=usuario_doctor2,  
    rut_doctor='21059713-1',
    nombres_doctor='Javier',
    primer_apellido_doctor='Rojas',
    segundo_apellido_doctor='Teran',
    correo_doctor='ja.rojast@duocuc.cl',
    telefono_doctor='987654321',
    fecha_nacimiento_doctor='2000-02-15',
    especialidad_doctor='Pediatría'
)
doctor2.save()

# Crear pacientes
usuario_paciente1 = Usuario(
    rut='21235179-2',
    email='gokussj4ssvm@gmail.com',
    nombre='Samuel',
    apellido='Vallejos'
)
usuario_paciente1.set_password('contrasena123')
usuario_paciente1.save()

paciente1 = Paciente(
    usuario=usuario_paciente1,  
    rut_paciente='21235179-2',
    nombres_paciente='Samuel',
    primer_apellido_paciente='Vallejos',
    segundo_apellido_paciente='Millanao',
    correo_paciente='gokussj4ssvm@gmail.com',
    telefono_paciente='995067507',
    fecha_nacimiento_paciente='2000-05-15',
    direccion_paciente='Av. Siempre Viva 123',
    genero_paciente='M'
)
paciente1.save()

usuario_paciente2 = Usuario(
    rut='24787781-9',
    email='di.cordova@duocuc.cl',
    nombre='Diego',
    apellido='Cordova'
)
usuario_paciente2.set_password('contrasena123')
usuario_paciente2.save()

paciente2 = Paciente(
    usuario=usuario_paciente2,  
    rut_paciente='24787781-9',
    nombres_paciente='Diego',
    primer_apellido_paciente='Cordova',
    segundo_apellido_paciente='Sejas',
    correo_paciente='di.cordova@duocuc.cl',
    telefono_paciente='958741254',
    fecha_nacimiento_paciente='2000-08-20',
    direccion_paciente='Calle Falsa 456',
    genero_paciente='M'
)
paciente2.save()

# Crear clínicas
clinica1 = Clinica(
    nombre_clinica='Clínica Salud Total',
    correo_clinica='contacto@clinicasaludtotal.cl',
    telefono_clinica='123456789'
)
clinica1.save()

clinica2 = Clinica(
    nombre_clinica='Clínica Familiar',
    correo_clinica='contacto@clinicafamiliar.cl',
    telefono_clinica='456123789'
)
clinica2.save()

# Crear sedes
nueva_sede1 = SedeClinica(
    clinica=clinica1,
    region_sede='Región Metropolitana',
    comuna_sede='Santiago',
    direccion_sede='Av. Siempre Viva 1234',
    telefono_sede='987654321'
)
nueva_sede1.save()

nueva_sede2 = SedeClinica(
    clinica=clinica2,
    region_sede='Región Valparaíso',
    comuna_sede='Viña del Mar',
    direccion_sede='Avenida Libertad 789',
    telefono_sede='654321987'
)
nueva_sede2.save()

# Crear informes
informe1 = Informe(
    doctor=doctor1,
    paciente=paciente1,
    titulo_informe='Consulta Cardiológica',
    descripcion_informe='Informe de consulta cardiológica realizado.',
    notas_doctor='El paciente muestra síntomas de fatiga.',
    instrucciones_tratamiento='Recomendaciones de descanso y revisión.',
    documentos_extra=None
)
informe1.save()

informe2 = Informe(
    doctor=doctor2,
    paciente=paciente2,
    titulo_informe='Consulta Pediátrica',
    descripcion_informe='Informe de consulta pediátrica realizado.',
    notas_doctor='El paciente está sano y activo.',
    instrucciones_tratamiento='Mantener una dieta equilibrada.',
    documentos_extra=None
)
informe2.save()


DoctorClinica.objects.create(doctor=doctor1, sede=nueva_sede1)
DoctorClinica.objects.create(doctor=doctor2, sede=nueva_sede2)

# Crear usuarios para doctores adicionales
usuario_doctor4 = Usuario(
    rut='22334455-6',
    email='pedro.garcia@usuario.com',
    nombre='Pedro',
    apellido='García'
)
usuario_doctor4.set_password('contrasena123')
usuario_doctor4.save()

usuario_doctor5 = Usuario(
    rut='33445566-7',
    email='laura.sosa@usuario.com',
    nombre='Laura',
    apellido='Sosa'
)
usuario_doctor5.set_password('contrasena123')
usuario_doctor5.save()

usuario_doctor6 = Usuario(
    rut='44556677-8',
    email='miguel.rojas@usuario.com',
    nombre='Miguel',
    apellido='Rojas'
)
usuario_doctor6.set_password('contrasena123')
usuario_doctor6.save()

# Crear doctores adicionales
doctor4 = Doctor(
    usuario=usuario_doctor4,
    rut_doctor='22334455-6',
    nombres_doctor='Pedro',
    primer_apellido_doctor='García',
    segundo_apellido_doctor='Lopez',
    correo_doctor='pedro.garcia@doctor.com',
    telefono_doctor='123123123',
    fecha_nacimiento_doctor='1980-10-20',
    especialidad_doctor='Dermatología'
)
doctor4.save()

doctor5 = Doctor(
    usuario=usuario_doctor5,
    rut_doctor='33445566-7',
    nombres_doctor='Laura',
    primer_apellido_doctor='Sosa',
    segundo_apellido_doctor='Martinez',
    correo_doctor='laura.sosa@doctor.com',
    telefono_doctor='321321321',
    fecha_nacimiento_doctor='1985-05-12',
    especialidad_doctor='Neurología'
)
doctor5.save()

doctor6 = Doctor(
    usuario=usuario_doctor6,
    rut_doctor='44556677-8',
    nombres_doctor='Miguel',
    primer_apellido_doctor='Rojas',
    segundo_apellido_doctor='Ramirez',
    correo_doctor='miguel.rojas@doctor.com',
    telefono_doctor='456456456',
    fecha_nacimiento_doctor='1990-08-17',
    especialidad_doctor='Oftalmología'
)
doctor6.save()

# Crear usuarios para pacientes adicionales
usuario_paciente3 = Usuario(
    rut='55667788-9',
    email='jose.fernandez@example.com',
    nombre='José',
    apellido='Fernández'
)
usuario_paciente3.set_password('contrasena123')
usuario_paciente3.save()

usuario_paciente4 = Usuario(
    rut='66778899-0',
    email='marta.rodriguez@example.com',
    nombre='Marta',
    apellido='Rodríguez'
)
usuario_paciente4.set_password('contrasena123')
usuario_paciente4.save()

usuario_paciente5 = Usuario(
    rut='77889900-1',
    email='luis.gomez@example.com',
    nombre='Luis',
    apellido='Gómez'
)
usuario_paciente5.set_password('contrasena123')
usuario_paciente5.save()

# Crear pacientes adicionales
paciente3 = Paciente(
    usuario=usuario_paciente3,
    rut_paciente='55667788-9',
    nombres_paciente='José',
    primer_apellido_paciente='Fernández',
    segundo_apellido_paciente='López',
    correo_paciente='jose.fernandez@paciente.com',
    telefono_paciente='789789789',
    fecha_nacimiento_paciente='1992-11-05',
    direccion_paciente='Calle Luna 123',
    genero_paciente='M'
)
paciente3.save()

paciente4 = Paciente(
    usuario=usuario_paciente4,
    rut_paciente='66778899-0',
    nombres_paciente='Marta',
    primer_apellido_paciente='Rodríguez',
    segundo_apellido_paciente='González',
    correo_paciente='marta.rodriguez@paciente.com',
    telefono_paciente='987987987',
    fecha_nacimiento_paciente='1988-04-10',
    direccion_paciente='Calle Sol 456',
    genero_paciente='F'
)
paciente4.save()

paciente5 = Paciente(
    usuario=usuario_paciente5,
    rut_paciente='77889900-1',
    nombres_paciente='Luis',
    primer_apellido_paciente='Gómez',
    segundo_apellido_paciente='Pérez',
    correo_paciente='luis.gomez@paciente.com',
    telefono_paciente='654654654',
    fecha_nacimiento_paciente='1995-06-20',
    direccion_paciente='Avenida Estrella 789',
    genero_paciente='M'
)
paciente5.save()

clinica3 = Clinica(
    nombre_clinica='Clínica Vida Sana',
    correo_clinica='contacto@vidasana.cl',
    telefono_clinica='321321321'
)
clinica3.save()

clinica4 = Clinica(
    nombre_clinica='Clínica Bienestar',
    correo_clinica='info@bienestar.cl',
    telefono_clinica='654654654'
)
clinica4.save()

# Crear sedes adicionales
sede3 = SedeClinica(
    clinica=clinica3,
    region_sede="Región de O'Higgins",
    comuna_sede='Rancagua',
    direccion_sede='Av. El Sol 123',
    telefono_sede='123456123'
)
sede3.save()

sede4 = SedeClinica(
    clinica=clinica4,
    region_sede='Región del Maule',
    comuna_sede='Talca',
    direccion_sede='Av. La Paz 456',
    telefono_sede='654654987'
)
sede4.save()

informe3 = Informe(
    doctor=doctor4,
    paciente=paciente3,
    titulo_informe='Chequeo Dermatológico',
    descripcion_informe='Informe de consulta dermatológica.',
    notas_doctor='Recomendar crema hidratante.',
    instrucciones_tratamiento='Aplicar crema diariamente.',
    fecha_informe=timezone.now()
)
informe3.save()

informe4 = Informe(
    doctor=doctor5,
    paciente=paciente4,
    titulo_informe='Consulta Neurológica',
    descripcion_informe='Informe de consulta neurológica.',
    notas_doctor='Realizar seguimiento mensual.',
    instrucciones_tratamiento='Ejercicios de memoria.',
    fecha_informe=timezone.now()
)
informe4.save()

informe5 = Informe(
    doctor=doctor6,
    paciente=paciente5,
    titulo_informe='Examen de la Vista',
    descripcion_informe='Informe de consulta oftalmológica.',
    notas_doctor='Recetar lentes correctivos.',
    instrucciones_tratamiento='Usar lentes diariamente.',
    fecha_informe=timezone.now()
)
informe5.save()

DoctorClinica.objects.create(doctor=doctor4, sede=sede3)
DoctorClinica.objects.create(doctor=doctor5, sede=sede4)
DoctorClinica.objects.create(doctor=doctor6, sede=sede3)

print("Datos cargados exitosamente.")


from consultorioCys.models import Doctor, Paciente, Informe, Clinica, SedeClinica, Usuario, DoctorClinica, DisponibilidadDoctor
from django.utils import timezone
import datetime

doctor = Doctor.objects.get(rut_doctor="20637502-7")  # Reemplaza con el RUT de un doctor existente

fecha = datetime.date(2024, 12, 9)
horas = ["09:00", "10:00", "11:00", "14:00", "15:00"]

for hora in horas:
    hora_disponible = datetime.datetime.strptime(hora, "%H:%M").time()
    DisponibilidadDoctor.objects.get_or_create(
        doctor=doctor,
        fecha=fecha,
        hora=hora_disponible,
        defaults={'disponible': True}
    )

print("Horas disponibles agregadas.")

doctor = Doctor.objects.get(rut_doctor="21059713-1")  # Reemplaza con el RUT de un doctor existente

fecha = datetime.date(2024, 12, 10)
horas = ["09:00", "10:00", "11:00", "14:00", "15:00"]

for hora in horas:
    hora_disponible = datetime.datetime.strptime(hora, "%H:%M").time()
    DisponibilidadDoctor.objects.get_or_create(
        doctor=doctor,
        fecha=fecha,
        hora=hora_disponible,
        defaults={'disponible': True}
    )

print("Horas disponibles agregadas.")

# Crear planes
Plan.objects.create(
    id_plan=1,
    nombre='Plan 1 mes',
    descripcion='Acceso 1 mes al consultorio',
    precio=4500,
    tipo='Paciente'
)

Plan.objects.create(
    id_plan=2,
    nombre='Plan 1 mes',
    descripcion='Plan para Instituciones medicas',
    precio=200000,
    tipo='Institucion'
)

# Crear suscripción
paciente = Paciente.objects.get(rut_paciente="21235179-2")  # Asegúrate de que el paciente exista
plan = Plan.objects.get(id_plan=1)  # Asegúrate de que el plan exista

Suscripcion.objects.create(
    paciente=paciente,
    plan=plan,
    fecha_inicio=now(),
    fecha_fin=now() + timedelta(days=30),  # Vigencia de 30 días
    renovado=False
)

exit()

-------------------------------------------------------------------------------------------------------

por si hay que eliminar los datos de la db

from consultorioCys.models import (
    Usuario,
    Doctor,
    Paciente,
    Clinica,
    SedeClinica,
    DoctorClinica,
    DisponibilidadDoctor,
    Plan,
    Suscripcion,
    Informe,
    PacienteInforme,
    Cita,
    MetodoPago,
    Transaccion,
)

# Borrar en el orden adecuado para evitar problemas de restricciones de clave foránea
Cita.objects.all().delete()
DisponibilidadDoctor.objects.all().delete()
PacienteInforme.objects.all().delete()
Informe.objects.all().delete()
Suscripcion.objects.all().delete()
Plan.objects.all().delete()
MetodoPago.objects.all().delete()
Transaccion.objects.all().delete()
DoctorClinica.objects.all().delete()
SedeClinica.objects.all().delete()
Clinica.objects.all().delete()
Doctor.objects.all().delete()
Paciente.objects.all().delete()
Usuario.objects.all().delete()

print("Todos los datos han sido eliminados exitosamente.")
